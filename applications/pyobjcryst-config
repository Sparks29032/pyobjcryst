#! /usr/bin/env python

import sys
import os
import getopt
import pkg_resources

valid_opts = ['includes', 'libs', 'cflags', 'ldflags', 'help']


def exit_with_usage(code=1):
    print >>sys.stderr, "Usage: %s [%s]" % (sys.argv[0],
            '|'.join('--'+opt for opt in valid_opts))
    sys.exit(code)


def main():

    try:
        opts, args = getopt.getopt(sys.argv[1:], '', valid_opts)
    except getopt.error:
        exit_with_usage()

    if not opts:
        exit_with_usage()

    dist = pkg_resources.get_distribution('pyobjcryst')
    basedir = dist.location

    def prependBaseDir(relpaths):
        rv = [os.path.normpath(os.path.join(basedir, d))
                for d in relpaths]
        return rv

    if '--help' in opts:
        exit_with_usage(0)

    for opt, ignored_value in opts:

        if opt in ('--includes', '--cflags'):
            reldirs = dist.get_metadata('inc_dirs.txt').strip().split('\n')
            absdirs = prependBaseDir(reldirs)
            flags = [ "-I" + d for d in absdirs ]
            if opt == '--cflags':
                flags.append("-DREAL=double")
            print ' '.join(flags)

        elif opt in ('--libs', '--ldflags'):
            libs = ["-lobjcryst"]
            if opt == '--ldflags':
                reldirs = dist.get_metadata('lib_dirs.txt').strip().split('\n')
                absdirs = prependBaseDir(reldirs)
                flags = [ "-L" + d for d in absdirs ]
                libs = flags + libs
            print ' '.join(libs)

    return


if __name__ == "__main__":
    main()
