Import('env')

# initialize custom builder BuildDefineREAL
SConscript('SConscript.definereal')

# Define the what we need to install objcryst
objcrystenv = env.Clone()

# We take care of REAL for good here.
objcrystenv.BuildDefineREAL(['ObjCryst/ObjCryst/General.h'],
        Value(env['REAL']))

# Source directories
objcrystenv.PrependUnique(CPPPATH = ["."])
objcrystenv.PrependUnique(CPPPATH = ["./cctbx/include"])

# Idenfity the required source files
srcfiles  = Glob("./ObjCryst/ObjCryst/*.cpp")
srcfiles += Glob("./ObjCryst/RefinableObj/*.cpp")
srcfiles += Glob("./ObjCryst/CrystVector/*.cpp")
srcfiles += Glob("./ObjCryst/Quirks/*.cpp")

# Make shared objects
objects = objcrystenv.SharedObject(srcfiles)
Clean(objects, "ObjCryst")

# Put this back into the global environment
env["objcrystobjs"] = objects

# Record headers
env['lib_includes']  = Glob("./ObjCryst/ObjCryst/*.h")
env['lib_includes'] += Glob("./ObjCryst/RefinableObj/*.h")
env['lib_includes'] += Glob("./ObjCryst/CrystVector/*.h")
env['lib_includes'] += Glob("./ObjCryst/Quirks/*.h")

# vim: ft=python
