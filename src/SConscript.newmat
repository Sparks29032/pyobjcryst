Import('env')

# Start by extracting the source library
archive = "newmat.tar.bz2"
import os
if not os.path.exists("newmat"):
    import tarfile
    tf = tarfile.open(archive, "r:bz2")
    tf.extractall()
    tf.close()

# Define the what we need to install cctbx
newmatenv = env.Clone()

# Add some flags
flags = ["-O3"]
newmatenv.AppendUnique(CXXFLAGS = flags)

# Define the requires source files
srcfiles = [ "fft.cpp", "evalue.cpp", "submat.cpp", "cholesky.cpp",
"hholder.cpp", "sort.cpp", "newmatrm.cpp", "jacobi.cpp", "svd.cpp",
"newmat8.cpp", "newmat7.cpp", "newmat6.cpp", "newmat5.cpp", "newmat3.cpp",
"newmat4.cpp", "newmat2.cpp", "newmat1.cpp", "bandmat.cpp", "myexcept.cpp",
"newmatex.cpp", "newfft.cpp"]

srcdir = "newmat"
import os.path
for i, f in enumerate(srcfiles):
    srcfiles[i] = os.path.join(srcdir, f)

# Make the library object
objects = newmatenv.SharedObject(srcfiles)

# Let the build system know that we can clean the source directory when clean
# is called.
Clean(objects, "newmat")
Clean(objects, archive)

# Put this back into the global environment
env["newmatobjs"] = objects
